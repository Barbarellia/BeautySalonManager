@model PaginatedList<Models.Enrollment>
<h3>Wolne terminy pracownika</h3>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    <i class="glyphicon glyphicon-chevron-left"></i>
</a>

@Html.DisplayFor(modelItem => Model.Monday) - @Html.DisplayFor(modelItem => Model.Sunday)

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    <i class="glyphicon glyphicon-chevron-right"></i>
</a>
<ul>
    @foreach (var item in Model)
    {
        <li>@item.Date</li>
    }
</ul>

@*to do podgladu pracownika*@

@*<h3>
        Terminy wybranego pracownika
    </h3>
    <table class="table">
        <tr>
            <th>Date</th>
            <th>Treatment</th>
            <th>Customer's last name</th>
            <th>Customer's first name</th>
            <th>Customer's email</th>
            <th>Customer's number</th>
        </tr>
        @foreach (var item in Model.Treatment.Enrollments)
        {
            <tr>
                <td>
                    @item.Date
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TreatmentAssignment.Treatment.Name)
                </td>
                <td>
                    @Model.Treatment.AppUsers.FirstOrDefault(q => q.Id == item.UserId).LastName
                </td>
                <td>
                    @Model.Treatment.AppUsers.FirstOrDefault(q => q.Id == item.UserId).FirstName
                </td>
                <td>
                    @Model.Treatment.AppUsers.FirstOrDefault(q => q.Id == item.UserId).Email
                </td>
                <td>
                    @Model.Treatment.AppUsers.FirstOrDefault(q => q.Id == item.UserId).PhoneNumber
                </td>
            </tr>
        }
    </table>*@
